
可以生成连续的 ID 号码 ,可以用来做抢购操作.

还有一种：基于redis 的 incr() 函数来实现 .

总的来说就是使用: dateStr + incr(i) ; i = 0,1,2,3 ;

即: dateStr + String.format("%1$06d", incr(i));

可以生成连续的 ID 号码的优缺点:


策略                      优点                       缺点                     格式.

UUID                   实现简单,不占用宽带            无序，不可读，查询慢            32位.
DB自增                  代码简单，递增                 DB单点故障，扩展性瓶颈
Snowflake              不占用宽带，低位趋势递增         依赖服务器时间                18位
Redis                  无单点故障，性能优于DB，递增      占用宽带，Redis维护           12位





